{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwhua\\\\github\\\\cis550\\\\project\\\\client\\\\src\\\\components\\\\MapContainer.js\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React from 'react';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      // this is just an example. Markers are fetched from BestLivings\n      nyc: this.props.mapInfo,\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {} // Shows the InfoWindow to the selected place upon a marker\n\n    };\n    this.displayLink = this.displayLink.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this); // console.log(this.state.nyc);\n  } // TODO: get the coordinates and update \"nyc\" document array based on some conditions given by users\n\n\n  getCoordinates() {}\n\n  displayLink(link) {\n    // additional icons: https://sites.google.com/site/gmapsdevelopment/\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"imdmLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"please \", /*#__PURE__*/React.createElement(\"a\", {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"click here\"), \" for more: \"));\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"googleMapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 10,\n      style: mapStyles,\n      initialCenter: {\n        lat: 40.7128,\n        lng: -74.0060\n      } //center of nyc\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.state.nyc.map((info, index) => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: index,\n        id: index,\n        position: {\n          lat: info.latitude,\n          lng: info.longitude\n        },\n        onClick: this.onMarkerClick,\n        name: info.film + ' is filmed here!',\n        subText: this.displayLink(info.imdb_link),\n        options: {\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Marker, {\n      key: 1,\n      id: 1,\n      position: {\n        // TODO: add additional properties\n        lat: 40.7128,\n        lng: -74.0060\n      },\n      onClick: this.onMarkerClick,\n      name: \"link\",\n      subText: \"film name\",\n      options: {\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      key: 2,\n      id: 2,\n      position: {\n        // TODO: add additional properties\n        lat: 40.8128,\n        lng: -74.1060\n      },\n      onClick: this.onMarkerClick,\n      name: \"link2\",\n      subText: \"film name2\",\n      options: {\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, this.state.selectedPlace.subText)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  // This is important! Do not leak it!\n  apiKey: 'AIzaSyA0rycsA7bNG_uKcvXq7i5wIcYmOIalCQs'\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/jwhua/github/cis550/project/client/src/components/MapContainer.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","nyc","mapInfo","displayLink","bind","getCoordinates","link","render","mapStyles","width","height","google","lat","lng","map","info","index","latitude","longitude","film","imdb_link","icon","url","name","subText","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport React from 'react';\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // this is just an example. Markers are fetched from BestLivings\r\n      nyc: this.props.mapInfo,\r\n      showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n      activeMarker: {},          // Shows the active marker upon click\r\n      selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n    }\r\n    this.displayLink = this.displayLink.bind(this);\r\n    this.onMarkerClick = this.onMarkerClick.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n    // console.log(this.state.nyc);\r\n  }\r\n\r\n  // TODO: get the coordinates and update \"nyc\" document array based on some conditions given by users\r\n  getCoordinates(){\r\n\r\n  }\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  displayLink (link){\r\n\r\n    // additional icons: https://sites.google.com/site/gmapsdevelopment/\r\n\r\n\r\n      return (\r\n        <div class=\"imdmLink\">\r\n          <p>please <a href = {link}>click here</a> for more: </p>\r\n\r\n        </div>\r\n      );\r\n\r\n  }\r\n\r\n  render() {\r\n    const mapStyles = {\r\n\t  \twidth: '100%',\r\n\t  \theight: '100%'\r\n\t\t};\r\n    return (\r\n        <div class=\"googleMapContainer\">\r\n\r\n          <Map\r\n            google={this.props.google}\r\n            zoom={10}\r\n            style={mapStyles}\r\n            initialCenter={{ lat: 40.7128, lng: -74.0060}}  //center of nyc\r\n          >\r\n              {this.state.nyc.map((info, index) => {\r\n                return (\r\n                  <Marker key={index} id={index} position={{lat: info.latitude, lng: info.longitude}}\r\n                    onClick = {this.onMarkerClick}\r\n                    name = {info.film + ' is filmed here!'}\r\n                    subText = {this.displayLink(info.imdb_link)}\r\n                    options = {{icon: {url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}}}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <Marker key={1} id={1} position={{\r\n                // TODO: add additional properties\r\n                lat: 40.7128,\r\n                lng: -74.0060\r\n             }}\r\n              onClick = {this.onMarkerClick}\r\n              name = {\"link\"}\r\n              subText = {\"film name\"}\r\n              options = {{icon: {url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}}}\r\n              />\r\n\r\n\r\n              <Marker key={2} id={2} position={{\r\n                // TODO: add additional properties\r\n                lat: 40.8128,\r\n                lng: -74.1060\r\n             }}\r\n              onClick = {this.onMarkerClick}\r\n              name = {\"link2\"}\r\n              subText = {\"film name2\"}\r\n              options = {{icon: {url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}}}\r\n              />\r\n\r\n            <InfoWindow\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n              onClose={this.onClose}\r\n            >\r\n              <div>\r\n                <h4>{this.state.selectedPlace.name}</h4>\r\n                <p>{this.state.selectedPlace.subText}</p>\r\n              </div>\r\n            </InfoWindow>\r\n          </Map>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  // This is important! Do not leak it!\r\n  apiKey: 'AIzaSyA0rycsA7bNG_uKcvXq7i5wIcYmOIalCQs'\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}