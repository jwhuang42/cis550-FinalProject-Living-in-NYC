{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwhua\\\\github\\\\cis550\\\\project\\\\client\\\\src\\\\components\\\\FunFacts.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport FunFactsAvgRatingRow from './FunFactsAvgRatingRow';\nimport FunFactsNewHostsRow from './FunFactsNewHostsRow';\nimport '../style/FunFacts.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class FunFacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: []\n    };\n    this.showAvgRating = this.showAvgRating.bind(this);\n    this.showNewHosts = this.showNewHosts.bind(this);\n  }\n\n  showAvgRating() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/funfacts/avgRating\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(avgRatingList => {\n      if (!avgRatingList) return;\n      console.log(avgRatingList); //displays your JSON object in the console\n\n      let avgRatingDivs = avgRatingList.map((avgRatingResults, i) => /*#__PURE__*/React.createElement(FunFactsAvgRatingRow, {\n        host_neighbourhood: avgRatingResults.host_neighbourhood,\n        count: avgRatingResults.count,\n        avg_rating: avgRatingResults.avg_rating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        result: avgRatingDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  showNewHosts() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/funfacts/newHosts\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(newHostsList => {\n      if (!newHostsList) return;\n      console.log(newHostsList); //displays your JSON object in the console\n\n      let newHostsDivs = newHostsList.map((newHostsResults, i) => /*#__PURE__*/React.createElement(FunFactsNewHostsRow, {\n        year: newHostsResults.year,\n        num: newHostsResults.num,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        result: newHostsDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Which fun fact do you wang to know?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      onClick: this.showAvgRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \"Number and Average Rating of Airbnb for each Neighbourhood\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      onClick: this.showNewHosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }, \"Number of New Hosts each Year\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 31\n      }\n    }, \"Neighbourhood\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 43\n      }\n    }, \"Count\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 43\n      }\n    }, \"Average Rating\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, this.state.result)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jwhua/github/cis550/project/client/src/components/FunFacts.js"],"names":["React","PageNavbar","FunFactsAvgRatingRow","FunFactsNewHostsRow","FunFacts","Component","constructor","props","state","result","showAvgRating","bind","showNewHosts","fetch","method","then","res","json","avgRatingList","console","log","avgRatingDivs","map","avgRatingResults","i","host_neighbourhood","count","avg_rating","setState","catch","err","newHostsList","newHostsDivs","newHostsResults","year","num","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PageNavbar from './PageNavbar';\r\nimport FunFactsAvgRatingRow from './FunFactsAvgRatingRow';\r\nimport FunFactsNewHostsRow from './FunFactsNewHostsRow';\r\nimport '../style/FunFacts.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class FunFacts extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tresult: []\r\n\t\t};\r\n\r\n\t\tthis.showAvgRating = this.showAvgRating.bind(this);\r\n\t\tthis.showNewHosts = this.showNewHosts.bind(this);\r\n\t}\r\n\r\n\r\n\r\n\tshowAvgRating() {\r\n        // Send an HTTP request to the server.\r\n        fetch(\"http://localhost:8081/funfacts/avgRating\", {\r\n        \tmethod: 'GET' // The type of HTTP request.\r\n        })\r\n        \t.then(res => res.json()) // Convert the response data to a JSON.\r\n        \t.then(avgRatingList => {\r\n            \tif (!avgRatingList) return;\r\n            \tconsole.log(avgRatingList); //displays your JSON object in the console\r\n\t  \t\t\tlet avgRatingDivs = avgRatingList.map((avgRatingResults, i) =>\r\n\t  \t\t\t\t<FunFactsAvgRatingRow host_neighbourhood={avgRatingResults.host_neighbourhood} count={avgRatingResults.count} avg_rating={avgRatingResults.avg_rating} />\r\n\t  \t\t\t);\r\n\r\n\t            // Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t            this.setState({\r\n\t            \tresult: avgRatingDivs\r\n\t            })\r\n        \t})\r\n        \t.catch(err => console.log(err))\t// Print the error if there is one.\r\n    }\r\n\r\n\tshowNewHosts() {\r\n        // Send an HTTP request to the server.\r\n        fetch(\"http://localhost:8081/funfacts/newHosts\", {\r\n        \tmethod: 'GET' // The type of HTTP request.\r\n        })\r\n        \t.then(res => res.json()) // Convert the response data to a JSON.\r\n        \t.then(newHostsList => {\r\n            \tif (!newHostsList) return;\r\n            \tconsole.log(newHostsList); //displays your JSON object in the console\r\n\t  \t\t\tlet newHostsDivs = newHostsList.map((newHostsResults, i) =>\r\n\t  \t\t\t\t<FunFactsNewHostsRow year={newHostsResults.year} num={newHostsResults.num} />\r\n\t  \t\t\t);\r\n\r\n\t            // Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t            this.setState({\r\n\t            \tresult: newHostsDivs\r\n\t            });\r\n        \t})\r\n        \t.catch(err => console.log(err))\t// Print the error if there is one.\r\n    }\r\n\r\n\r\n\trender() {\r\n      return (\r\n        <div className=\"Dashboard\">\r\n\r\n          <PageNavbar active=\"dashboard\" />\r\n\r\n          <br></br>\r\n          <div className=\"container movies-container\">\r\n            <div className=\"jumbotron\">\r\n              <div className=\"h5\">Which fun fact do you wang to know?</div>\r\n\t\t\t  <div className=\"\">\r\n\t\t\t  \t<button type=\"button\" class=\"btn btn-info\" onClick={this.showAvgRating}>Number and Average Rating of Airbnb for each Neighbourhood</button>\r\n\t\t\t  </div>\r\n\t\t\t  <br></br>\r\n              <div className=\"\">\r\n\t\t\t    <button type=\"button\" class=\"btn btn-info\" onClick={this.showNewHosts}>Number of New Hosts each Year</button>\r\n\t\t\t\t</div>\r\n            </div>\r\n\r\n            <br></br>\r\n            <div className=\"jumbotron\">\r\n              <div className=\"movies-container\">\r\n                <div className=\"movies-header\">\r\n\t\t\t\t  <div className=\"header\"><strong>Neighbourhood</strong></div>\r\n                  <div className=\"header\"><strong>Count</strong></div>\r\n                  <div className=\"header\"><strong>Average Rating</strong></div>\r\n                </div>\r\n                <div className=\"results-container\" id=\"results\">\r\n                  {this.state.result}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}