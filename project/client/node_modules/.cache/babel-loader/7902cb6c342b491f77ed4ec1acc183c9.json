{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwhua\\\\github\\\\cis550\\\\project\\\\client\\\\src\\\\components\\\\MapContainer.js\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React from 'react';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      // this is just an example. Markers are fetched from BestLivings\n      nyc: [{\n        lat: 40.7128,\n        lng: -74.0060\n      }, {\n        lat: 40.7228,\n        lng: -74.0160\n      }, {\n        lat: 40.6128,\n        lng: -74.1060\n      }],\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {} // Shows the InfoWindow to the selected place upon a marker\n\n    };\n  } // TODO: get the coordinates and update \"nyc\" document array based on some conditions given by users\n\n\n  getCoordinates() {}\n\n  displayMarkers() {\n    // additional icons: https://sites.google.com/site/gmapsdevelopment/\n    return this.state.nyc.map((nyc, index) => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: index,\n        id: index,\n        position: {\n          // TODO: add additional properties\n          lat: nyc.lat,\n          lng: nyc.lng\n        },\n        onClick: this.onMarkerClick,\n        name: 'Title',\n        subText: 'Some discriptive text...',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 10,\n      style: mapStyles,\n      initialCenter: {\n        lat: 40.7128,\n        lng: -74.0060\n      } //center of nyc\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.displayMarkers(), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.state.selectedPlace.subText))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  // This is important! Do not leak it!\n  apiKey: 'AIzaSyA0rycsA7bNG_uKcvXq7i5wIcYmOIalCQs'\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/jwhua/github/cis550/project/client/src/components/MapContainer.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","nyc","lat","lng","getCoordinates","displayMarkers","map","index","render","mapStyles","width","height","google","name","subText","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport React from 'react';\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n\r\n    this.state = {\r\n      // this is just an example. Markers are fetched from BestLivings\r\n      nyc: [{lat: 40.7128, lng: -74.0060}, {lat: 40.7228, lng: -74.0160}, {lat: 40.6128, lng: -74.1060}],\r\n      showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n      activeMarker: {},          // Shows the active marker upon click\r\n      selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n    }\r\n  }\r\n\r\n  // TODO: get the coordinates and update \"nyc\" document array based on some conditions given by users\r\n  getCoordinates(){\r\n\r\n  }\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  displayMarkers (){\r\n\r\n    // additional icons: https://sites.google.com/site/gmapsdevelopment/\r\n    return this.state.nyc.map((nyc, index) => {\r\n      return <Marker key={index} id={index} position={{\r\n        // TODO: add additional properties\r\n        lat: nyc.lat,\r\n        lng: nyc.lng\r\n     }}\r\n      onClick={this.onMarkerClick}\r\n      name={'Title'}\r\n      subText = {'Some discriptive text...'}\r\n      \r\n      />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const mapStyles = {\r\n\t  \twidth: '100%',\r\n\t  \theight: '100%'\r\n\t\t};\r\n    return (\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={10}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 40.7128, lng: -74.0060}}  //center of nyc\r\n        >\r\n          {this.displayMarkers()}\r\n          <InfoWindow\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}\r\n            onClose={this.onClose}\r\n          >\r\n            <div>\r\n              <h4>{this.state.selectedPlace.name}</h4>\r\n              <p>{this.state.selectedPlace.subText}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  // This is important! Do not leak it!\r\n  apiKey: 'AIzaSyA0rycsA7bNG_uKcvXq7i5wIcYmOIalCQs'\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}