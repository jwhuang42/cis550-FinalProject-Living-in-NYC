{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwhua\\\\github\\\\cis550\\\\project\\\\client\\\\src\\\\components\\\\BestLiving.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport BestLivingRow from './BestLivingRow';\nimport MapContainer from './MapContainer';\nimport '../style/BestLiving.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class BestLiving extends React.Component {\n  constructor(props) {\n    super(props); // State maintained by this React component is the selected movie name,\n    // and the list of recommended movies.\n\n    this.state = {\n      movieName: \"\",\n      recMovies: [],\n      initialMap: [],\n      mapResult: {}\n    };\n    this.handleMovieNameChange = this.handleMovieNameChange.bind(this);\n    this.submitMovie = this.submitMovie.bind(this);\n    this.initializeMap = this.initializeMap.bind(this);\n  }\n\n  handleMovieNameChange(e) {\n    this.setState({\n      movieName: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      mapResult: /*#__PURE__*/React.createElement(MapContainer, {\n        mapInfo: {\n          latitude: 40.7128,\n          longitude: -74.0060\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })\n    });\n  }\n  /* ---- Q2 (Recommendations) ---- */\n  // Hint: Name of movie submitted is contained in `this.state.movieName`.\n\n\n  submitMovie() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/recommendations/\" + this.state.movieName, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(recMovieList => {\n      if (!recMovieList) return;\n      console.log(recMovieList); //displays your JSON object in the console\n\n      let recMovieDivs = recMovieList.map((recMovie, i) => /*#__PURE__*/React.createElement(BestLivingRow, {\n        title: recMovie.title,\n        id: recMovie.id,\n        rating: recMovie.rating,\n        vote_count: recMovie.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }\n      })); // Set the state of the recommended movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        recMovies: recMovieDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  } // connecting to google API and initial the google map\n\n\n  initializeMap() {\n    fetch(\"http://localhost:8081/movies/popular\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(recMovieList => {\n      if (!recMovieList) return;\n      console.log(recMovieList); //displays your JSON object in the console\n\n      var mapInfo = recMovieList; // Set the state of the recommended movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        mapResult: /*#__PURE__*/React.createElement(MapContainer, {\n          mapInfo: mapInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }\n        })\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  } // ----------------look     https://github.com/moshen/node-googlemaps    next time------------------------------\n  // let recMovieDivs = recMovieList.map((recMovie, i) =>\n  // <BestLivingRow title={recMovie.title} id={recMovie.id} rating={recMovie.rating} vote_count={recMovie.vote_count} />\n  // );\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BestLiving\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"bestliving\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bestliving-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, \"NYC Map\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      buttonType: \"mapButton\",\n      onClick: this.initializeMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Which place in NYC is the most popular filming location\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 8\n      }\n    }, \" \", this.mapResult)))));\n  }\n\n} // <div className=\"container recommendations-container\">\n// \t<div className=\"jumbotron\">\n// \t\t<div className=\"h5\">Recommendations</div>\n// \t\t<br></br>\n// \t\t<div className=\"input-container\">\n// \t\t\t<input type='text' placeholder=\"Enter Movie Name\" value={this.state.movieName} onChange={this.handleMovieNameChange} id=\"movieName\" className=\"movie-input\"/>\n// \t\t\t<button id=\"submitMovieBtn\" className=\"submit-btn\" onClick={this.submitMovie}>Submit</button>\n// \t\t</div>\n// \t\t<div className=\"header-container\">\n// \t\t\t<div className=\"h6\">You may like ...</div>\n// \t\t\t<div className=\"headers\">\n// \t\t\t\t<div className=\"header\"><strong>Title</strong></div>\n// \t\t\t\t<div className=\"header\"><strong>Movie ID</strong></div>\n// \t\t\t\t\t\t<div className=\"header\"><strong>Rating</strong></div>\n// \t\t\t\t\t\t<div className=\"header\"><strong>Vote Count</strong></div>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t<div className=\"results-container\" id=\"results\">\n// \t\t\t{this.state.recMovies}\n// \t\t</div>\n// \t</div>\n// </div>","map":{"version":3,"sources":["C:/Users/jwhua/github/cis550/project/client/src/components/BestLiving.js"],"names":["React","PageNavbar","BestLivingRow","MapContainer","BestLiving","Component","constructor","props","state","movieName","recMovies","initialMap","mapResult","handleMovieNameChange","bind","submitMovie","initializeMap","e","setState","target","value","componentDidMount","latitude","longitude","fetch","method","then","res","json","recMovieList","console","log","recMovieDivs","map","recMovie","i","title","id","rating","vote_count","catch","err","mapInfo","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PageNavbar from './PageNavbar';\r\nimport BestLivingRow from './BestLivingRow';\r\nimport MapContainer from './MapContainer';\r\nimport '../style/BestLiving.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default class BestLiving extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// State maintained by this React component is the selected movie name,\r\n\t\t// and the list of recommended movies.\r\n\t\tthis.state = {\r\n\t\t\tmovieName: \"\",\r\n\t\t\trecMovies: [],\r\n\t\t\tinitialMap: [],\r\n\t\t\tmapResult: {}\r\n\t\t}\r\n\r\n\t\tthis.handleMovieNameChange = this.handleMovieNameChange.bind(this);\r\n\t\tthis.submitMovie = this.submitMovie.bind(this);\r\n\t\tthis.initializeMap = this.initializeMap.bind(this);\r\n\t}\r\n\r\n\thandleMovieNameChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tmovieName: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({mapResult: <MapContainer mapInfo={{latitude: 40.7128,longitude: -74.0060}} />})\r\n\t}\r\n\r\n\r\n\t/* ---- Q2 (Recommendations) ---- */\r\n\t// Hint: Name of movie submitted is contained in `this.state.movieName`.\r\n\tsubmitMovie() {\r\n\t\t// Send an HTTP request to the server.\r\n        fetch(\"http://localhost:8081/recommendations/\" + this.state.movieName, {\r\n          method: 'GET' // The type of HTTP request.\r\n        })\r\n          .then(res => res.json()) // Convert the response data to a JSON.\r\n          .then(recMovieList => {\r\n            if (!recMovieList) return;\r\n            console.log(recMovieList); //displays your JSON object in the console\r\n  \t\t    let recMovieDivs = recMovieList.map((recMovie, i) =>\r\n  \t\t\t  <BestLivingRow title={recMovie.title} id={recMovie.id} rating={recMovie.rating} vote_count={recMovie.vote_count} />\r\n  \t\t    );\r\n\r\n            // Set the state of the recommended movies list to the value returned by the HTTP response from the server.\r\n            this.setState({\r\n              recMovies: recMovieDivs\r\n            })\r\n          })\r\n          .catch(err => console.log(err))\t// Print the error if there is one.\r\n\t}\r\n\r\n\t// connecting to google API and initial the google map\r\ninitializeMap(){\r\n\tfetch(\"http://localhost:8081/movies/popular\", {\r\n\t\tmethod: 'GET' // The type of HTTP request.\r\n\t})\r\n\t\t.then(res => res.json()) // Convert the response data to a JSON.\r\n\t\t.then(recMovieList => {\r\n\t\t\tif (!recMovieList) return;\r\n\t\t\tconsole.log(recMovieList); //displays your JSON object in the console\r\n\r\n\t\t\tvar mapInfo = recMovieList;\r\n\r\n\r\n\t\t\t// Set the state of the recommended movies list to the value returned by the HTTP response from the server.\r\n\t\t\tthis.setState({\r\n\t\t\t\tmapResult: <MapContainer mapInfo={mapInfo}/>\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\t// Print the error if there is one.\r\n}\r\n\r\n\r\n\t// ----------------look     https://github.com/moshen/node-googlemaps    next time------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t// let recMovieDivs = recMovieList.map((recMovie, i) =>\r\n\t\t// <BestLivingRow title={recMovie.title} id={recMovie.id} rating={recMovie.rating} vote_count={recMovie.vote_count} />\r\n\t\t// );\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"BestLiving\">\r\n\t\t\t\t<PageNavbar active=\"bestliving\" />\r\n\r\n\t\t\t\t<div className=\"container bestliving-container\">\r\n\t\t\t\t\t<div className=\"jumbotron\">\r\n\t\t\t\t\t\t<div class=\"h3\">NYC Map</div>\r\n\r\n\t\t\t\t\t\t<div class=\"row justify-content-md-center\">\r\n\t\t\t\t\t  \t<button type=\"button\" class=\"btn btn-info\" buttonType=\"mapButton\" onClick={this.initializeMap}>Which place in NYC is the most popular filming location</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t<div class=\"row\" id=\"map\" >\r\n\t\t\t\t\t\t\t<div class=\"col-12\"> {this.mapResult}</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// <div className=\"container recommendations-container\">\r\n// \t<div className=\"jumbotron\">\r\n// \t\t<div className=\"h5\">Recommendations</div>\r\n// \t\t<br></br>\r\n// \t\t<div className=\"input-container\">\r\n// \t\t\t<input type='text' placeholder=\"Enter Movie Name\" value={this.state.movieName} onChange={this.handleMovieNameChange} id=\"movieName\" className=\"movie-input\"/>\r\n// \t\t\t<button id=\"submitMovieBtn\" className=\"submit-btn\" onClick={this.submitMovie}>Submit</button>\r\n// \t\t</div>\r\n// \t\t<div className=\"header-container\">\r\n// \t\t\t<div className=\"h6\">You may like ...</div>\r\n// \t\t\t<div className=\"headers\">\r\n// \t\t\t\t<div className=\"header\"><strong>Title</strong></div>\r\n// \t\t\t\t<div className=\"header\"><strong>Movie ID</strong></div>\r\n// \t\t\t\t\t\t<div className=\"header\"><strong>Rating</strong></div>\r\n// \t\t\t\t\t\t<div className=\"header\"><strong>Vote Count</strong></div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t\t<div className=\"results-container\" id=\"results\">\r\n// \t\t\t{this.state.recMovies}\r\n// \t\t</div>\r\n// \t</div>\r\n// </div>\r\n"]},"metadata":{},"sourceType":"module"}